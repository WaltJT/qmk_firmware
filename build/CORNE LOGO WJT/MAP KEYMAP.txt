Animacion Pikachu, con luces RGB ("RGB_MATRIX" ver config.c).
LOGO CORNE con leyenda WJT en el vertice y la modificacion del pasaje del CRKBD al Keymap.c.

enum unicode_names {
  BKSLH, // Backslash '( \ )'
  CIRC, // Circa ^
  AT, // Arroba @

  GRIN, // grinning face üòä
  TJOY, // tears of joy üòÇ
  SMILE, // grining face with smiling eyes üòÅ
  HEART, // heart ‚ù§
  EYERT, // smiling face with heart shaped eyes üòç
  CRY, // crying face üò≠
  SMEYE, // smiling face with smiling eyes üòä
  UNAMU, // unamused üòí
  KISS, // kiss üòò
  HART2, // two hearts üíï
  WEARY, // weary üò©
  OKHND, // ok hand sign üëå
  PENSV, // pensive üòî
  SMIRK, // smirk üòè
  RECYC, // recycle ‚ôª
  WINK, // wink üòâ
  THMUP, // thumb up üëç
  THMDN, // thumb down üëé
  PRAY, // pray üôè
  PHEW, // relieved üòå
  MUSIC, // musical notes
  FLUSH, // flushed üò≥
  CELEB, // celebration üôå
  CRY2, // crying face üò¢
  COOL, // smile with sunglasses üòé
  NOEVS, // see no evil üôà
  NOEVH, // hear no evil üôâ
  NOEVK, // speak no evil üôä
  POO, // pile of poo üí©
  EYES, // eyes üëÄ
  VIC, // victory hand ‚úåÔ∏è
  BHART, // broken heart üíî
  SLEEP, // sleeping face üò¥
  SMIL2, // smiling face with open mouth & sweat üòÖ
  HUNRD, // 100 üíØ
  CONFU, // confused üòï
  TONGU, // face with tongue & winking eye üòú
  DISAP, // disappointed üòû
  YUMMY, // face savoring delicious food üòã
  CLAP, // hand clapping üëè
  FEAR, // face screaming in fear üò±
  HORNS, // smiling face with horns üòà
  HALO, // smiling face with halo üòá
  BYE, // waving hand üëã
  SUN, // sun ‚òÄÔ∏è
  MOON, // moon üåô
  SKULL, // skull üíÄ
  ROLF, // Risa a carcajadas ü§£
  ZIPP, // Zipper-mouthface ü§ê
  RAT, // Rat üêÄ
  COW, //Cow üêÑ
  ELEPH, //Elephant üêò
  DOG, //Dog üêï
  HRS, //Horse üêé
  BEER, //Beer üç∫
  DRK, //Clinking glasses (Drinks) ü•Ç
  BTL, //bottle with popping cork üçæ
  JYT, //Joystick üéÆ
  PLC, //Police officer üëÆ
  NOTE, //Notebook üíª
  MNY, //Heavy dollar sign (Money) üí≤
  SHW, //Shower üõÅ

};

/*

// QMK keycodes para la disposici√≥n en espa√±ol latino
KC_NUBS,          // < MAYUS >
KC_GRV,           // | MAYUS ¬∞
KC_QUOT,          // { MAYUS [
KC_BSLS,          // } MAYUS ]
KC_NUHS,          // } MAYUS ]
KC_RBRC,          // + MAYUS *
KC_SCLN           // √± MAYUS √ë
KC_PSLS,          // /
KC_AMPR,          // /
KC_QUES,          // ¬Ø
KC_LT,            // ;
KC_GT,            // :
KC_LCBR,          // ¬®
KC_RCBR,          // *
KC_LABK,          // ;
KC_RABK,          // :
KC_TILD,          // ¬∞
KC_COLN,          // √ë
KC_EXLM,          // !
KC_AT,            // "
KC_HASH,          // #
KC_DLR,           // $
KC_PERC,          // %
KC_CIRC,          // &
KC_ASTR,          // (
KC_LPRN,          // )
KC_RPRN,          // =
KC_EQL,           // ¬ø
KC_UNDS,          // ?
KC_PLUS,          // ¬°
KC_PIPE,          // ]
KC_DQUO,          // [
KC_LBRC,          // ¬¥
KC_MINS,          // '
KC_COMM,          // ,
KC_DOT,           // .
KC_SLSH,          // -

*/

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  [_QWERTY] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
TD(TD_ESC_CAPS),  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,                         KC_Y,    KC_U,    KC_I,    KC_O,    KC_P, KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
LSFT_T(KC_LBRC),  KC_A,    KC_S,    KC_D,    KC_F,    KC_G,                         KC_H,    KC_J,    KC_K,    KC_L, KC_SCLN,  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
TD(TD_LCTL_LGUI), KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,                         KC_N,    KC_M, KC_COMM,  KC_DOT, KC_SLSH,  KC_TAB, 
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                         KC_LGUI, MO(_SIMBOLS),LT(_SIMBOLS, KC_SPC),   LT(_NAVIGATE, KC_SPC),MO(_NAVIGATE), TD(TD_RALT_LALT)
                                      //`--------------------------'  `--------------------------'

  ),

   [_SIMBOLS] = LAYOUT( 
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
       KC_ESC, KC_MINS,   KC_AT, KC_HASH,  KC_DLR, KC_NUBS,                      KC_PERC, KC_CIRC, KC_ASTR, KC_LPRN, KC_RPRN, KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------| 
      KC_LSFT, KC_PGUP,   KC_UP, KC_PGDN, KC_AMPR,X(BKSLH),                       KC_EQL, KC_PLUS, KC_QUOT, KC_BSLS, X(CIRC),  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
      KC_LCTL, KC_LEFT, KC_DOWN, KC_RIGHT,KC_RCBR,  KC_GRV,                      KC_UNDS, KC_EXLM,  KC_DQT, KC_PIPE,   X(AT),  KC_TAB, 
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                                          KC_LGUI, _______,  KC_SPC,  LT(_ADJUST, KC_SPC),MO(_ADJUST), TD(TD_RALT_LALT)
                                      //`--------------------------'  `--------------------------'
  ),
  
    [_NAVIGATE] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
       KC_ESC, KC_PGUP,   KC_UP, KC_PGDN,   KC_F4, KC_PSCR,                      KC_PSLS,    KC_1,    KC_2,    KC_3, KC_PPLS, KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------| 
      KC_LSFT, KC_LEFT, KC_DOWN, KC_RIGHT,  KC_F5, TD(TD_HOME_END),              KC_PAST,    KC_4,    KC_5,    KC_6, KC_PMNS,  KC_ENT,  
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
TD(TD_RALT_LALT), KC_CALC, KC_PEQL, KC_MUTE, KC_VOLD, KC_VOLU,                   KC_PCMM,    KC_7,    KC_8,    KC_9,    KC_0, KC_LCTL,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                           KC_LGUI, MO(_DVORAK),LT(_DVORAK, KC_SPC),     KC_SPC, _______, KC_DEL
                                      //`--------------------------'  `--------------------------'
  ),

    [_ADJUST] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
      RGB_M_P, RGB_M_B, RGB_M_R,RGB_M_SW,RGB_M_SN, RGB_M_K,                      RGB_M_P, RGB_M_B, RGB_M_R,RGB_M_SW,RGB_M_SN, RGB_M_K,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
      RGB_MOD, RGB_HUI, RGB_SAI, RGB_VAI, RGB_SPI, RGB_M_X,                      RGB_MOD, RGB_HUI, RGB_SAI, RGB_VAI, RGB_SPI,  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
     RGB_RMOD, RGB_HUD, RGB_SAD, RGB_VAD, RGB_SPD, RGB_M_G,                     RGB_RMOD, RGB_HUD, RGB_SAD, RGB_VAD, RGB_SPD, RGB_TOG,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                             LT(_EMOJIS, KC_LGUI), _______,  KC_SPC,     KC_SPC, _______, MO(_EMOJIS)
                                      //`--------------------------'  `--------------------------'
  ),

    [_DVORAK] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
TD(TD_ESC_CAPS),KC_MINS,KC_COMM,  KC_DOT,    KC_P,    KC_Y,                         KC_F,    KC_G,    KC_C,    KC_R,    KC_L, KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
LSFT_T(KC_LBRC),  KC_A,    KC_O,    KC_E,    KC_U,    KC_I,                         KC_D,    KC_H,    KC_T,    KC_N,    KC_S,  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
TD(TD_LCTL_LGUI),KC_LABK, KC_Q,    KC_J,    KC_K,    KC_X,                         KC_B,    KC_M,    KC_W,    KC_V,    KC_Z,  KC_TAB,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                                          KC_LGUI, _______,  KC_SPC,     KC_SPC, _______, TD(TD_RALT_LALT)
                                      //`--------------------------'  `--------------------------'

  ),

    [_EMOJIS] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
       KC_ESC, X(GRIN),X(SMILE),X(EYERT),X(HEART),  X(CRY),                     X(SMILE),X(UNAMU), X(KISS),X(TJOY), X(WEARY), KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
 LT(6, KC_NO),X(RECYC), X(WINK), X(COOL),X(OKHND),X(THMUP),                       X(SUN), X(PHEW),X(FLUSH),X(TONGU),X(SLEEP),  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
     X(CONFU), X(PRAY), X(FEAR), X(ROLF),  X(POO),X(PENSV),                     X(SMEYE),X(SMIRK),X(BHART),X(DISAP),X(YUMMY),  KC_TAB,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                                     _______, MO(_EMOJIS2),  KC_SPC,     KC_SPC, _______, _______
                                      //`--------------------------'  `--------------------------'
  ),

    [_EMOJIS2] = LAYOUT(
  //,-----------------------------------------------------.                    ,-----------------------------------------------------.
       X(VIC),X(HORNS), X(HALO), X(ZIPP),X(HART2), X(CRY2),                     X(SMIL2),X(MUSIC),X(NOEVS),X(NOEVH),X(NOEVK), KC_BSPC,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
      _______,  X(COW),  X(DOG), X(BEER),X(HUNRD),X(THMDN),                      X(MOON),X(SKULL),  X(DRK), X(NOTE),  X(BTL),  KC_ENT,
  //|--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
       X(RAT),X(ELEPH),  X(HRS),  X(PLC),X(CELEB), X(CLAP),                      X(EYES),  X(BYE),  X(MNY),  X(SHW),  X(JYT),  KC_TAB,
  //|--------+--------+--------+--------+--------+--------+--------|  |--------+--------+--------+--------+--------+--------+--------|
                                          _______, _______,  KC_SPC,     KC_SPC, _______, _______
                                      //`--------------------------'  `--------------------------'
  ),

};

Se agrega en rules.mk

AUTO_SHIFT_ENABLE = yes
AUTOCORRECT_ENABLE = yes

Pero para poder activar AUTOCORRECT_ENABLE se desactivaron todas las iluminaciones excepto el RGB que suelo utilizar (#   define ENABLE_RGB_MATRIX_GRADIENT_UP_DOWN).

*AUTOCORRECT_ENABLE Ocupa demasiada en memoria (mas de 1300 bytes)*

Se agrega la capa DVORAK, y se le agrega a la capa, para que testee si esta o no activo el mayus 
(tal como lo muestra la capa QWERTY) mostrando a traves del OLED "CAP".

Se realizan cambios en la capa SIMBOLS, para que las teclas funcionen como corresponde sin utilizar la modificacion que se habia realizado con el 
Microsoft Keyboard Layout Creator (MKLC), para no necesitar instalar la mod que cree y se agregan con unicodes los simbolos falstantes.

Tambien se agrega la capa EMOJIS, y EMOJIS2, al principio esta la lista de simbolos para la distribucion en espa√±ol, y la lista de todos los emojis como asi tambien los unicodes para los simbolos agregados.

Animacion Pikachu, con luces RGB ("RGB_MATRIX" ver config.c), solo quedo luz fija (default).

Se configura CRKBD en KEYMAP.C para ya no tener necesidad del mismo ni el BKP, ni en las modificaciones, ya que el mismo tiene un valor configurado de RGB, el cual quedara por defecto.

Se agrega LOGO CORNE con leyenda WJT en el vertice.